# github hosted runner w/ qemu + docker buildx deploy custom arm64 image to compile repo and uploads binary to jetson nano via self hosted runner on nano
name: remote build

on:
    push:
    workflow_dispatch:
      inputs:
        environment:
          description: 'Environment'
          required: true
          default: 'remote'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: setup docker qemu
      uses: docker/setup-qemu-action@v3

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v3

    - name: pull jetson nano ubuntu docker image
      run: docker pull jmoreiraseame/jetson-nano-ubuntu:1.0

    - name: build project
      run: |
        docker run --rm --platform linux/arm64 -v ${{ github.workspace }}:/repo -w /repo jmoreiraseame/jetson-nano-ubuntu:1.0 /bin/bash -c "
          echo '/repo:' && \
          ls -la /repo && \
          mkdir /repo/xc/xctest/build && \
          cd /repo/xc/xctest/build && \
          cmake .. && \
          make && \
          mkdir /repo/bin && \
          cp test /repo/bin/ && \
          ldd test
        "

    - name: upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifact
        path: bin/test
# jetson hosted runner labeled arm64, or i can specify the name of the runner instead
  deploy:
    runs-on: [Jetson, ARM64]
    needs: [build]

    steps:
    - name: ensure directory exists
      run: mkdir -p ./team06/bin

    - name: download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: test-artifact
        path: ./team06/bin

    # - name: run binary
    #   run: chmod +x ./team06/bin/test && ./team06/bin/test
